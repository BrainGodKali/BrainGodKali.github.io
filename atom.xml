<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://braingodkali.github.io</id>
    <title>脑神卡里(BrainGod_Kacry)</title>
    <updated>2022-10-20T03:29:07.257Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://braingodkali.github.io"/>
    <link rel="self" href="https://braingodkali.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://braingodkali.github.io/images/avatar.png</logo>
    <icon>https://braingodkali.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, 脑神卡里(BrainGod_Kacry)</rights>
    <entry>
        <title type="html"><![CDATA[我所选择的游戏引擎]]></title>
        <id>https://braingodkali.github.io/post/wo-suo-xuan-ze-de-you-xi-yin-qing/</id>
        <link href="https://braingodkali.github.io/post/wo-suo-xuan-ze-de-you-xi-yin-qing/">
        </link>
        <updated>2022-10-01T08:19:16.000Z</updated>
        <content type="html"><![CDATA[<p>在今年暑假，我正式接触游戏开发，但游戏开发不可能直接写代码，所以就要用<a href="https://baike.baidu.com/item/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%BC%95%E6%93%8E/18183577">游戏引擎</a>，但市面上太多选择了，我将会用我的经历告诉你我的选择。</p>
<h1 id="1虚幻引擎unreal-engine-简称ue">1:<a href="https://www.unrealengine.com/zh-CN/">虚幻引擎</a>（Unreal Engine 简称UE）</h1>
<figure data-type="image" tabindex="1"><img src="https://braingodkali.github.io/post-images/1664671497471.png" alt="" loading="lazy"></figure>
<h3 id="介绍来自某度百科">介绍（来自某度百科）</h3>
<p><strong>“虚幻引擎 是由游戏公司EPIC开发的虚幻引擎的最新版本。是一个面向下一代游戏机和DirectX 9个人电脑的完整的游戏开发平台，提供了游戏开发者需要的大量的核心技术、数据生成工具和基础支持。”</strong></p>
<h3 id="费用要求开源但又不完全免费"><strong>费用要求：开源，但又不完全免费</strong></h3>
<p>我可以说虚幻是你在游戏开发里最划算的选择，首先它是开源的（但它的源码需要你Follow他们官方github账号才能看到，而且不完全免费，它需要你再通过本引擎 <strong>每季度获得首个3000美元的收入后，开发者开始支付5%的版权费用即可</strong>  ！！！），而且它相比于Unity来说没有阉割功能，对个人和付费用户一视同仁。</p>
<h3 id="开发方式"><strong>开发方式</strong></h3>
<p>然后就是编程的要求，虚幻提供了“ <a href="https://docs.unrealengine.com/4.27/zh-CN/ProgrammingAndScripting/Blueprints/GettingStarted/">蓝图</a> ”这种开发方式和C++开发</p>
<h5 id="蓝图"><strong>蓝图</strong></h5>
<p><strong>蓝图</strong> 简单来说就是节点，节点简单来说就是Nodes，Nodes简单来说就是通过 <strong>连线的方式关联两个你想关联的模块实现逻辑方式的一种形式</strong> ，我看也有些人称之为逻辑树，他的最大特点就是简单，不需要有编程基础（官方这么说，但是我建议还是提前学一下编程比较好），还有非破坏性原则。这种节点的应用场景不仅是在游戏开发的行业，在很多影视方面也会用到，例如有些同学可能剪辑会用 <a href="http://www.blackmagicdesign.com/cn/products/davinciresolve/">达芬奇</a> ，达芬奇它就是一种节点形式来做特效。但它归结下来不完全算是蓝图，蓝图是具有UE特色的节点方式，包括b站在内，绝大多数视频教程也是在教你如何使用它的蓝图。</p>
<figure data-type="image" tabindex="2"><img src="https://braingodkali.github.io/post-images/1664615165371.jpg" alt="" loading="lazy"></figure>
<h5 id="c"><strong>C++</strong></h5>
<p>如果你是一个真正想体验写代码或者是真正想上手学习C++的人，那我建议你可以使用他的C++来制作游戏，那么你可以尝试<a href="https://visualstudio.microsoft.com/zh-hans/vs/">Visual Studio</a>用配合UE去开发，但是这难度非常高。</p>
<h6 id="两者之间的关系"><strong>两者之间的关系</strong></h6>
<p>用官方的话来说”蓝图比较适合于设计程序员，而C++会更适用于逻辑程序员“，说白就是说如果你是只需要通过比较简单的逻辑去实现游戏的功能，你可以直接用游戏为你写好的东西；但如果你的逻辑比较复杂，需要很强的运算性的话呢，就需要C++来帮你制作一个逻辑。</p>
<h3 id="优点"><strong>优点</strong></h3>
<ul>
<li>
<p>1，<strong>画质</strong> 是真的顶尖，从来没有哪一款游戏已经可以导入如此精细的建模，我跟朋友在谈到UE的时候也会戏称为包装成游戏引擎的顶尖影视软件（几张图片解决）。<br>
<img src="https://braingodkali.github.io/post-images/1664616900636.png" alt="" loading="lazy"><br>
<img src="https://braingodkali.github.io/post-images/1664616907701.png" alt="" loading="lazy"><br>
<img src="https://braingodkali.github.io/post-images/1664616917440.png" alt="" loading="lazy"><br>
<img src="https://braingodkali.github.io/post-images/1664616922131.png" alt="" loading="lazy"><br>
<img src="https://braingodkali.github.io/post-images/1664616931858.png" alt="" loading="lazy"></p>
</li>
<li>
<p>2，<strong>免费开源</strong> “若深爱，那就给它自由。”这是2015年4月份，从虚幻引擎4开源免费一直挂到现在的官网标语。将20年以来沉淀的所有精湛技术全部开源给每一位开发者免费享用，这是Epic迈出的巨大一步，也是很有战略意义的一步，这使得人人都可以享受虚幻引擎带来的创作快感，这样的收费模式也会赢得更多开发商的青睐，从而大量开辟市场，赢得用户。猜猜看，刚过了不到半年，对手CE就马上放下架子紧随其后，跟着UE走上了免费开源之路。<br>
<img src="https://braingodkali.github.io/post-images/1664617309158.png" alt="" loading="lazy"><br>
只能冲着走走。</p>
</li>
<li>
<p>3，<strong>蓝图编程</strong> 虚幻4的优点不胜枚举，有一样东西，我们一定要着重说，那就是蓝图。blueprint是一种非常超前的想法，而且非常有前途，也非常好，它基本上可以不用code来解决轻量单机游戏开发中的所有程序问题。最具代表性的就是杨冰独立开发的“迷失之魂(LostSoulAside)”。尽管蓝图还不能完全替代c++，但想一下，就在现在，Sequencer，AutoLOD，VReditor…虚幻引擎正在以前所未有的迭代速度升级换代，赢得赞誉。<br>
<img src="https://braingodkali.github.io/post-images/1664615165371.jpg" alt="" loading="lazy"></p>
</li>
<li>
<p>4，<strong>最懂游戏</strong> Epic始创于1991年，它不同于Unity只是制作引擎，回收用户数据。虚幻引擎是真真正正的一代一代探索者根据他们做的游戏和经验迭代出来的引擎，我在虚幻4开源后接触到它的时候很快就喜欢上了他人性化的设计，诸如ConstantBiasScale这种人性化的节点设计非常的多，你会发现，虚幻引擎并不高冷，也并不复杂，它甚至很贴心，更懂游戏设计者的心。</p>
</li>
</ul>
<h3 id="缺点"><strong>缺点</strong></h3>
<ul>
<li>
<p>1，对电脑性能要求真的很高。。。（画质那么好，不高才怪），我愿称之为磁盘杀手（需要的储存空间约等于一个大表哥2）。<br>
<img src="https://braingodkali.github.io/post-images/1664617980656.png" alt="" loading="lazy"></p>
</li>
<li>
<p>2，对2D游戏的支持很差。<br>
<img src="https://braingodkali.github.io/post-images/1664618064866.png" alt="" loading="lazy"></p>
</li>
<li>
<p>3，对Linux的支持差的只能说是个🌶️🐤</p>
</li>
</ul>
<h3 id="总结"><strong>总结</strong></h3>
<p>如果你是一个专业开发者的话呢，啊，well是一个很好的选择，但是如果你是个个人开发者on where也会成为你的首选之一，但是。。（<strong>性能和难度</strong>）懂吧。。</p>
<h1 id="2unity">2：<a href="https://unity.cn/">Unity</a></h1>
<figure data-type="image" tabindex="3"><img src="https://braingodkali.github.io/post-images/1664671533289.png" alt="" loading="lazy"></figure>
<h3 id="介绍来自某度百科-2">介绍（来自某度百科）</h3>
<p>Unity 是实时3D互动内容创作和运营平台。包括游戏开发、美术、建筑、汽车设计、影视在内的所有创作者，借助Unity将创意变成现实。Unity平台提供一整套完善的软件解决方案，可用于创作、运营和变现任何实时互动的2D和3D内容，支持平台包括手机、平板电脑、PC、游戏主机、增强现实和虚拟现实设备。</p>
<ul>
<li>游戏作品：《王者荣耀》《Granny》《使命召唤手游》</li>
<li>支持维度 ：2D、3D、VR、AR、MR [3]</li>
</ul>
<h3 id="费用要求个人免费"><strong>费用要求：个人《免费》。。</strong></h3>
<p>也是一张图片解决<br>
<img src="https://braingodkali.github.io/post-images/1664672114943.jpg" alt="" loading="lazy"></p>
<h3 id="开发方式-c"><strong>开发方式</strong> C#</h3>
<p>如果你学习的就是C#的话，你可以无脑的选择它，而且还有来自微软老爹的支持。<br>
<img src="https://braingodkali.github.io/post-images/1664672602132.png" alt="" loading="lazy"></p>
<h3 id="优点-2"><strong>优点</strong></h3>
<ul>
<li>
<p>1.<strong>对中国的支持</strong>：Unity在中国混得特别好，所以对本地中国的支持会比绝大多数游戏引擎都强，而且还会有各种各样的云服务之类的。<br>
<img src="https://braingodkali.github.io/post-images/1664672886679.png" alt="" loading="lazy"></p>
</li>
<li>
<p>2.<strong>市场广阔</strong>：然后就是Unity在中国范围内的市场也远比其他各类游戏引擎都要宽广，中国范围内很多游戏都是由unity制作的，所以在中国也算是主流游戏引擎。<br>
<img src="https://braingodkali.github.io/post-images/1664673824054.jpg" alt="" loading="lazy"></p>
</li>
<li>
<p>3.<strong>入门简单</strong>，开发语言C#相对于C/C++更简单，而且unity的使用已相对成熟，学习视频较多<br>
<img src="https://braingodkali.github.io/post-images/1664673635209.png" alt="" loading="lazy"></p>
</li>
<li>
<p>4.<strong>开发经验悠久</strong> ：相比于UE来说Unity他是更有开发经验的，因为他们是专门从事游戏开发的，在这条道路上也走得更加的结实一些。</p>
</li>
<li>
<p>5.<strong>支持linux</strong> ：我只能说🐂🍺好吧。<br>
<img src="https://braingodkali.github.io/post-images/1664674209872.jpg" alt="" loading="lazy"></p>
</li>
</ul>
<h3 id="缺点-2"><strong>缺点</strong></h3>
<ul>
<li>
<p>1.<strong>对中国的过度支持</strong> ： Unity虽然在中国混的好但是也会带来一系列很头疼的麻烦，首先第一点就是他们的账号必须要用手机号注册（包括登录），这会给很多像我一样学习者带来不必要的麻烦；其次他对中国过度支持造成了很严重的广告投放行为；而且过度的支持让我们很难想这到底是不是一个游戏引擎。<br>
<img src="https://braingodkali.github.io/post-images/1664672886679.png" alt="" loading="lazy"><br>
云服务可以带来很大的便利但是有的时候我们是真的不需要的。</p>
</li>
<li>
<p>2.<em>看图</em><br>
<img src="https://braingodkali.github.io/post-images/1664674370008.png" alt="" loading="lazy"></p>
</li>
</ul>
<h3 id="总结-2"><strong>总结</strong></h3>
<p>这款引擎我用的不多，当他给我最大的印象就是在中国混的真的是太好了，所以造成了以上的问题，所以我也没有太大的心思对他进行更深的工作。</p>
<h1 id="3godot"><strong>3：Godot</strong></h1>
<figure data-type="image" tabindex="4"><img src="https://braingodkali.github.io/post-images/1664750750178.jpg" alt="" loading="lazy"></figure>
<h3 id="介绍来自某度百科-3">介绍（来自某度百科）</h3>
<p>Godot游戏引擎是Juan Linietsky和Ariel Manzur 发起的，是一款制作游戏的软件，可以制作2D和3D游戏。通过基于节点的架构来设计游戏，3D渲染器设计可以增强3D游戏的画面。具有内置工具的2D游戏功能以像素坐标工作，可以掌控2D游戏效果。面向团队的设计从架构和工具到VCS集成，Godot专为团队中的每个人设计。编辑器可在Windows、Mac OS和Linux系统中运行，支持导出游戏到Windows、Mac OS、Linux、Android、iOS、UWP和HTML5等平台。</p>
<h3 id="费用要求完全免费开源"><strong>费用要求：完全免费开源！！！</strong></h3>
<p>Godot可以说是你在目前流行游戏引擎里面看到的为数不多真正开源无门槛的游戏引擎，完全免费开源！！</p>
<h3 id="开发方式支持绝大多数的语言"><strong>开发方式：《支持》绝大多数的语言</strong></h3>
<figure data-type="image" tabindex="5"><img src="https://braingodkali.github.io/post-images/1664749139736.png" alt="" loading="lazy"></figure>
<ul>
<li>1.GDScript：“类似Python的脚本语言，旨在轻松制作游戏”其实就是官方提供的一种专门用于Godot的语言。</li>
<li>2.C#：官方支持比较强，已经可以成为Godot的开发语言了，但是有关他的教程比较少。</li>
<li>3.C++：完全C++支持，无需使用 GDNative 重新编译引擎（但我建议别弄因为很麻烦而且完全没有教程）</li>
<li>GDNative：换一句话就是外置代码。</li>
<li>Visual scripting：类似UE的蓝图，可视化编程的一种方式。</li>
<li>其他语言：社区提供对 Rust、Nim、D 和其他语言的支持。</li>
</ul>
<h3 id="优点-3"><strong>优点</strong></h3>
<ol>
<li>
<p>宽松的开源协议：Godot引擎的源代码采用MIT协议发布，这意味着我们可以在商业项目中免费使用Godot Engine，并且可以自由地修改Godot的源代码，将其移植到我们自己的硬件平台上。这个需求用Unity之类的闭源游戏引擎肯定是不行的。其实我们最初的原型是用Unity开发的，后来因为无法移植而放弃了Unity，所以说还是开源软件好。</p>
</li>
<li>
<p>所见即所得的开发环境。我们也尝试过OGRE等其他3D游戏引擎，但是它们都没有Godot这样强大而好用的开发工具，你只能用代码来构造场景，这样效率就很低。而Godot提供了和Unity类似的开发体验，直接把模型、光源、摄像机拖进场景，再设置参数就可以了，随时可以看到渲染效果，搭建场景非常方便。</p>
</li>
<li>
<p>自带的GUI控件非常好用。Godot原本是个2D游戏引擎，所以天然地对2D渲染有着良好的支持。它自带了几十种GUI控件，直接拖到场景中去，就可以迅速构造出一个2D交互界面，对于熟悉Xcode和Qt的人来说很容易上手。实际上Godot引擎的开发环境（Editor）就是用Godot自己的GUI控件搭起来的，这一点是非常厉害的。相比之下，Unity的GUI工具就没有这么简便了。</p>
</li>
<li>
<p>一键导出到目标平台的能力。我们在电脑上开发3D游戏，在电脑上测试OK之后，直接一键导出project，然后把导出的文件拷贝到我们的嵌入式设备上就可以使用了，渲染效果和电脑上一模一样，省去了适配不同平台的麻烦。</p>
</li>
</ol>
<h3 id="缺点-3"><strong>缺点</strong></h3>
<ol>
<li>
<p>渲染性能不如Unity。当我们的模型总面数达到30万的时候，Unity仍可以渲染60帧，而Godot只能渲染不到30帧。经过分析，Unity主要采用Deferred rendering，并且在一次Draw Call中渲染尽可能多的物体（比如所有GUI控件可以在一个Draw Call内渲染完），以减少Draw Call。而Godot采用了不同的思路，它通过调整渲染顺序，尽可能减少shader change。两种方式各有千秋，但就目前来说，Unity的渲染性能更胜一筹，希望Godot加油啊。</p>
</li>
<li>
<p>对嵌入式GPU的抗锯齿支持不太好。在开发AI防碰仪的早期阶段，当时Godot的最新版本为3.1，这个版本对MSAA抗锯齿的支持非常有限。具体来说，就是不支持OpenGL ES 2.0的MSAA扩展。而我们的Mali-400 GPU偏偏只支持OpenGL ES 2.0，这就用不了MSAA了吗？也不是，幸好Godot是一个比较活跃的开源软件，在Github上有人为Godot贡献了OpenGL ES 2.0的MSAA补丁。我们在合并这个补丁之后又做了一些修改，就可以启用MSAA了，渲染质量瞬间提升了一截。现在Godot已经发布了3.2版本，这个版本是支持在OpenGL ES 2.0上启用MSAA的，大家可以放心使用。</p>
</li>
</ol>
<h3 id="总结-3"><strong>总结</strong></h3>
<p>不是最专业但绝对是最好的之一，我反正非常支持的他，据说4.0发布之后画质提升。</p>
<h1 id="cocos系列"><strong>Cocos系列</strong></h1>
<figure data-type="image" tabindex="6"><img src="https://braingodkali.github.io/post-images/1664751682745.jpg" alt="" loading="lazy"></figure>
<h3 id="介绍来自某度百科-4">介绍（来自某度百科）</h3>
<p>Cocos是由厦门雅基软件有限公司推出的数字内容开发一站式解决方案，具备开源、免费、轻量、高性能等特点，服务了2D和3D游戏开发、智能座舱、在线教育、XR、数字人、数字文创等领域开发者，Cocos在全球203个国家和地区，拥有150万开发者，覆盖全球超过16亿终端用户。</p>
<p>Cocos成立于2010年，核心产品包括开源引擎框架Cocos2d-x、编辑器Cocos Creator、游戏加速框架Cocos Runtime、智能座舱解决方案Cocos HMI、互动课件编辑器Cocos ICE、XR方向创作工具Cocos Creator XR等等</p>
<h3 id="费用要求免费开源"><strong>费用要求：免费开源</strong></h3>
<p>是真的免费开源，你甚至可以在GitHub上面找到他们的源码</p>
<h3 id="开发方式-2"><strong>开发方式：</strong></h3>
<h5 id="cocos2dx"><strong>Cocos2dx</strong></h5>
<p>支持C++、Lua、JavaScript</p>
<h5 id="cocos-creator"><strong>Cocos Creator</strong></h5>
<p>支持 JavaScript，TypeScript<br>
<img src="https://braingodkali.github.io/post-images/1664752398885.png" alt="" loading="lazy"></p>
<h3 id="优点比较unity"><strong>优点（比较Unity）</strong></h3>
<ul>
<li>
<p>开发2D游戏:<br>
Cocos Creator免费，Unity收费;<br>
Cocos Creator包体小, Unity包体大;<br>
Cocos Creator 能发native平台外，还能发各大H5小游戏平台如抖音,微信，华为oppo, vivo。<br>
Unity开发H5平台的小游戏技术没有Cocos Creator成熟。</p>
</li>
<li>
<p>开发3D游戏:<br>
Cocos Creator免费，Unity收费;<br>
Cocos Creator 做重度游戏的渲染效果不如Unity, 3D性能比Unity差些。<br>
Cocos Creator与Unity 做中小型3D游戏技术成熟。<br>
Cocos Creator 可以发布到h5平台(微信,抖音,小游戏)，Unity发布h5平台不成熟</p>
</li>
</ul>
<h3 id="缺点-4"><strong>缺点</strong></h3>
<ul>
<li>
<p>对Windows的支持不是特别好，没有办法导出exe</p>
<h3 id="总结-4"><strong>总结</strong></h3>
</li>
</ul>
<p>推一款好引擎但是它主打web端的开发，就很难受。。</p>
<h1 id="opengl"><strong>openGL</strong></h1>
<p>我只说了一句这才是真正的大佬。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://braingodkali.github.io/post/hello-gridea/</id>
        <link href="https://braingodkali.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="https://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>